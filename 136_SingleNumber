// 4/26/2017

Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

public int singleNumber(int[] nums) {
    HashMap<Integer, Integer> map = new HashMap<>();
    int output = 1;
    for (int num : nums) {
        map.put(num, map.getOrDefault(num, 0) + 1);
    }
    for (int key : map.keySet()) {
        if (map.get(key) == 1) {
            output = key;
        }
    }
    return output;
}

public int singleNumber(int[] nums) {
    int output = 0;
    for (int num : nums) {
        output ^= num;
    }
    return output;
}

// 5/23/2017

public int singleNumber(int[] nums) {
    int result = nums[0];
    for (int i = 1; i < nums.length; i++) {
        result ^= nums[i];
    }
    return result;
}