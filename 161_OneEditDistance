// 5/12/2017

Given two strings S and T, determine if they are both one edit distance apart.

public boolean isOneEditDistance(String s, String t) {
    if (s.length() == t.length()) {
        int diff = 0;
        if (s.length() == 0) {
            return false;
        }
        for (int i = 0; i < s.length(); i++) {
            char ch_s = s.charAt(i);
            char ch_t = t.charAt(i);
            
            if (ch_s != ch_t) {
                diff++;
            }
        }
        return (diff == 1);
    } else if (Math.abs(s.length() - t.length()) == 1) {
        if (s.length() - t.length() > 0) {
            return oneDiffer(s, t);
        } else {
            return oneDiffer(t, s);
        }
    } else {
        return false;
    }
}
private boolean oneDiffer (String longer, String shorter) {
    for (int i = 0, j =0; i < longer.length() && j < shorter.length(); i++, j++) {
        char ch_longer = longer.charAt(i);
        char ch_shorter = shorter.charAt(j);
        if (ch_longer != ch_shorter) {
            return (longer.substring(i+1).equals(shorter.substring(j)));
        }
    }
    return true;
}