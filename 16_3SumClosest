// 1/21/2017

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).



public int threeSumClosest(int[] nums, int target) {
	if (nums == null)
		return -999;

	Arrays.sort(nums);

	int answer = nums[0] + nums[1] + nums[2];
	int diff = Math.abs(answer - target);

	for (int i = 0; i < nums.length - 2; i++) {
		int left = i + 1;
		int right = nums.length - 1;

		while (left < right) {
			int sum = nums[i] + nums[left] + nums[right];
			int currentDiff = Math.abs(sum - target);
			if (currentDiff < diff) {
				diff = currentDiff;
				answer = sum;
			}
			if (sum < target) 
				left++;
			else
				right--;
		}
	}
	return answer;
}