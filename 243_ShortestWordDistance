// 4/9/2017

Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “coding”, word2 = “practice”, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

public int shortestDistance(String[] words, String word1, String word2) {
    int first_idx = -1;
    int second_idx = -1;
    int answer = Integer.MAX_VALUE;
    
    for (int i = 0; i < words.length; i++) {
        if (words[i].equals(word1)) {
            first_idx = i;
        }
        if (words[i].equals(word2)) {
            second_idx = i;
        }
        if (first_idx != -1 && second_idx != -1) {
            answer = Math.min(answer, Math.abs(first_idx - second_idx));
        }
    }
    return answer;
}