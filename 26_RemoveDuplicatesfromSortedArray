// 4/6/2017

Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.

Do not allocate extra space for another array, you must do this in place with constant memory.

For example,
Given input array nums = [1,1,2],

Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.


public int removeDuplicates(int[] nums) {
    if (nums.length == 0) {
        return 0;
    }
    int anchor = 0;
    int pointer = 1;
    int pointer_end = nums.length - 1;
    
    while (pointer <= pointer_end) {
        // anochor stays at front
        // anchor only moves to the right, if the different number found
        // then set the value at anchor position as this different value
        if (nums[anchor] == nums[pointer]) {
            pointer++;
        } else { 
            anchor++;
            nums[anchor] = nums[pointer];
        }
    }
    return (anchor+1);
}