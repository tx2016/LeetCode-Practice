// 4/9/2017

Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....

For example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is [1, 6, 2, 5, 3, 4].


public void wiggleSort(int[] nums) {
    for (int i = 0; i < nums.length; i++) {
        if (i % 2 == 1) { // odd index position
            if (nums[i-1] > nums[i]) {
                swap(nums, i);
            }
        } else if (i>=1 && nums[i] > nums[i-1]) { //even index position and not the first element
            swap(nums, i);
        }
    }
}
// swap the number with the element in front
private void swap(int[] nums, int idx) {
    int temp = nums[idx];
    nums[idx] = nums[idx-1];
    nums[idx-1] = temp;
}