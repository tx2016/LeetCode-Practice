// 4/11/2017

Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

For example,
Given n = 3,

You should return the following matrix:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

public int[][] generateMatrix(int n) {
    int[][] output = new int[n][n];
    if (n == 0) {
        return output;
    }
    int row_start = 0;
    int col_start = 0;
    int row = n-1;
    int col = n-1;
    int counter = 1;
    while (row_start <= row && col_start <= col) {
        // move to the right
        for (int j = col_start; j <= col; j++) {
            output[row_start][j] = counter;
            counter++;
        }
        row_start++;
        // move to the bottom
        for (int i = row_start; i <= row; i++) {
            output[i][col] = counter;
            counter++;
        }
        col--;
        // move to the left
        
        if (col_start > col) {
            break;
        }
        for (int j = col; j >= col_start; j--) {
            output[row][j] = counter;
            counter++;
        }
        row--;
        // move to the top
        if (row_start > row) {
            break;
        }
        for (int i = row; i >= row_start; i--) {
            output[i][col_start] = counter;
            counter++;
        }
        col_start++;
    }
    return output;
}