// 5/22/2017

Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

public List<List<Integer>> combine(int n, int k) {
    List<List<Integer>> result = new ArrayList<>();
    helper(result, new Stack<Integer>(), 1, n, k);
    return result;
}
private void helper(List<List<Integer>> result, Stack<Integer> stack, int start, int n, int k) {
    if (stack.size() == k) {
        result.add(new ArrayList<Integer>(stack));
    }
    for (int i = start; i <= n; i++) {
        stack.push(i);
        helper(result, stack, i+1, n, k);
        stack.pop();
    }
}