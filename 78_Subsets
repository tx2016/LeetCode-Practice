// 3/22/2017

Given a set of distinct integers, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

public List<List<Integer>> subsets(int[] nums) {
    if (nums.length == 0) {
    	return new ArrayList<List<Integer>>();
    }
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    Arrays.sort(nums);
    helper(res, new ArrayList<Integer>(), nums, 0);
    return res;


}

private void helper(List<List<Integer>> res, List<Integer> list, int[] nums, int start) {
	res.add(new ArrayList<Integer>(list));
	for (int i = start; i < nums.length; i++) {
		list.add(nums[i]);
		helper(res, list, nums, i + 1);
		list.remove(list.size() - 1);
	}
}